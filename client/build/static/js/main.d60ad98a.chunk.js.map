{"version":3,"sources":["pages/home/index.js","utils/api.js","components/organisms/continents-list/index.js","components/molecules/form-modal/index.js","utils/handle-api-error.js","components/organisms/continents-form/index.js","components/molecules/add-fab/index.js","pages/continents/index.js","components/fields/select-continents/index.js","components/organisms/countries-form/index.js","components/organisms/countries-list/index.js","pages/countries/index.js","pages/regions/index.js","pages/cities/index.js","pages/languages/index.js","pages/currencies/index.js","components/molecules/header/index.js","components/molecules/navigation/index.js","components/molecules/content/index.js","components/molecules/footer/index.js","App.js","utils/is-mobile.js","serviceWorker.js","index.js","logo.svg"],"names":["HomePage","Card","CardActionArea","CardMedia","image","logo","CardContent","Typography","variant","gutterBottom","CardActions","Button","color","target","href","api","axios","create","baseURL","timeout","getContinents","saveContinent","input","post","deleteContinent","id","delete","saveCountry","deleteCountry","useStyles","makeStyles","toolbar","display","alignItems","justifyContent","ContinentsList","list","onDeleteSuccess","classes","React","useState","page","setPage","rowsPerPage","setRowsPerPage","handleDelete","a","console","log","Paper","Toolbar","className","component","TextField","label","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","length","map","item","key","code","name","nativeName","countries","coords","IconButton","onClick","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","value","FormModal","open","children","close","handleSubmit","Dialog","AppBar","position","edge","aria-label","onSubmit","DialogContent","DialogActions","type","handleApiError","error","response","data","ContinentsForm","onSuccess","fields","setField","message","setMessage","preventDefault","err","handleInput","defaultValue","onChange","fullWidth","required","helperText","AddFab","Fab","ContinentsPage","continents","setContinents","setOpen","updateContinents","then","res","useEffect","Container","SelectContinents","setData","fetchData","Autocomplete","options","newValue","getOptionLabel","option","renderInput","params","CountriesForm","CountriesList","continent","CountriesPage","updateCountries","RegionsPage","CitiesPage","LanguagesPage","CurrenciesPage","theme","appBarOpen","breakpoints","up","paddingLeft","appBarHidden","menuButtonOpen","menuButtonHidden","title","flexGrow","Header","toggleDrawer","clsx","drawerPaper","transitions","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","transition","leavingScreen","width","spacing","paper","padding","overflow","flexDirection","Navigation","handleDrawerClose","Drawer","Divider","NavLink","to","appBarSpacer","mixins","content","height","container","paddingTop","paddingBottom","Content","root","bottom","zIndex","Footer","setValue","BottomNavigation","showLabels","BottomNavigationAction","icon","App","check","navigator","userAgent","vendor","window","opera","test","substr","isMobile","CssBaseline","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.d60ad98a.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardActions,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport logo from './../../logo.svg';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardActionArea>\r\n          <CardMedia image={logo} />\r\n          <CardContent>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              Welcome to World Places. A Open Source and human edited resource\r\n              of all countries, region/states, cities/towns across the world.\r\n              You can update the information any time by cloning the repo -\r\n              making updates into the local data, re-exporting the json, and\r\n              creating a pull request.\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/jimmyjamieson/world-places\"\r\n            >\r\n              GitHub\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              target=\"_blank\"\r\n              href=\"http://localhost:4000/api\"\r\n            >\r\n              API\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              target=\"_blank\"\r\n              href=\"http://localhost:4000/docs\"\r\n            >\r\n              DOCS\r\n            </Button>\r\n          </CardActions>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:4000/api',\r\n  timeout: 1000000,\r\n});\r\n\r\n// Continents\r\n\r\nexport const getContinents = () => {\r\n  return api('continents?join=countries');\r\n};\r\n\r\nexport const saveContinent = (input = {}) => {\r\n  return api.post('continents', input)\r\n}\r\n\r\nexport const updateContinent = (id, input = {}) => {\r\n  return api.put(`continents/${id}`, input)\r\n}\r\n\r\nexport const deleteContinent = (id) => {\r\n  return api.delete(`continents/${id}`)\r\n}\r\n\r\n// Countries\r\n\r\nexport const getCountries = () => {\r\n  return api('countries?join=relation');\r\n};\r\n\r\nexport const saveCountry = (input = {}) => {\r\n  return api.post('countries', input)\r\n}\r\n\r\nexport const deleteCountry = (id) => {\r\n  return api.delete(`countries/${id}`)\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { deleteContinent } from '../../../utils/api';\r\nimport DeleteForever from '@material-ui/icons/DeleteForever';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nconst ContinentsList = ({ list, onDeleteSuccess }) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleDelete = async (id) => {\r\n    try{\r\n      console.log('id', id)\r\n      await deleteContinent(id)\r\n      onDeleteSuccess()\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar variant=\"regular\" className={classes.toolbar}>\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Continents\r\n        </Typography>\r\n        <TextField label=\"Search\" />\r\n      </Toolbar>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component=\"th\">ID</TableCell>\r\n              <TableCell component=\"th\">CODE</TableCell>\r\n              <TableCell component=\"th\">NAME</TableCell>\r\n              <TableCell component=\"th\">NATIVE</TableCell>\r\n              <TableCell component=\"th\">COUNTRIES</TableCell>\r\n              <TableCell component=\"th\" align=\"right\">\r\n                COORDS\r\n              </TableCell>\r\n              <TableCell  align=\"right\">DELETE</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {list.length > 0 ? (\r\n              list.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.id}</TableCell>\r\n                  <TableCell>{item.code}</TableCell>\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>{item.nativeName}</TableCell>\r\n                  <TableCell>{item?.countries.length}</TableCell>\r\n                  <TableCell align=\"right\">{item.coords}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton onClick={() => handleDelete(item.id)}>\r\n                      <DeleteForever />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan=\"8\">\r\n                  No data. Make sure to re-import data from the json file\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        count={list.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ContinentsList;\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst FormModal = ({ open, children, name, close, handleSubmit }) => {\r\n  return (\r\n    <Dialog open={open}>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">{name}</Typography>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={close}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent>{children}</DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"submit\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default FormModal;\r\n","const handleApiError = (error) => {\r\n  const { response = {}} = error\r\n  const { data = {}} = response\r\n  return data\r\n}\r\n\r\nexport default handleApiError","import React, { useState } from 'react';\r\nimport { saveContinent } from '../../../utils/api';\r\nimport FormModal from '../../molecules/form-modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport handleApiError from '../../../utils/handle-api-error';\r\n\r\nconst ContinentsForm = ({ onSuccess, open, close }) => {\r\n  const [fields, setField] = useState({});\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await saveContinent(fields);\r\n      setField({})\r\n      setMessage(null)\r\n      onSuccess();\r\n    } catch (error) {\r\n      const err = await handleApiError(error)\r\n      setMessage(err.message)\r\n    }\r\n  };\r\n\r\n  const handleInput = event => {\r\n    const { target = {} } = event;\r\n    const { name, value } = target;\r\n    setField({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <FormModal\r\n      open={open}\r\n      close={close}\r\n      name=\"Add Continent\"\r\n      handleSubmit={handleSubmit}\r\n    >\r\n      {message && message}\r\n      <TextField\r\n        name=\"code\"\r\n        label=\"Code\"\r\n        variant=\"outlined\"\r\n        defaultValue={ fields.code }\r\n        onChange={handleInput}\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={handleInput}\r\n        required\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"nativeName\"\r\n        label=\"Native Name\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={handleInput}\r\n        required\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"coords\"\r\n        label=\"GeoCoords\"\r\n        helperText=\"2.194216,5.2010515\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={handleInput}\r\n        required\r\n      />\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default ContinentsForm;\r\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst AddFab = ({ onClick }) => {\r\n  return (\r\n    <Fab color=\"secondary\" aria-label=\"add\" onClick={onClick}>\r\n      <AddIcon />\r\n    </Fab>\r\n  )\r\n}\r\n\r\nexport default AddFab","import React, { useEffect, useState } from 'react';\r\nimport ContinentsList from '../../components/organisms/continents-list';\r\nimport ContinentsForm from '../../components/organisms/continents-form';\r\nimport { getContinents } from '../../utils/api';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddFab from '../../components/molecules/add-fab';\r\n\r\nconst ContinentsPage = () => {\r\n  const [continents, setContinents] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const updateContinents = () => {\r\n    getContinents().then(res => setContinents(res.data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateContinents();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <ContinentsForm\r\n        open={open}\r\n        close={ () => setOpen(false)}\r\n        onSuccess={() => updateContinents()}\r\n      />\r\n      <ContinentsList list={continents} onDeleteSuccess={() => updateContinents()} />\r\n      <AddFab onClick={() => setOpen(!open)} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContinentsPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { getContinents } from '../../../utils/api';\r\n\r\nconst SelectContinents = ({ onChange, name }) => {\r\n  const [ data, setData ] = useState([])\r\n\r\n  const fetchData = async() => {\r\n    const data = await getContinents()\r\n    return data.data\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData().then((data) => {\r\n      setData(data)\r\n    })\r\n  }, [])\r\n\r\n  console.log('data', data)\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={data}\r\n      onChange={(event, newValue) => {\r\n        onChange({\r\n          target: {\r\n            name: name || 'continent',\r\n            value: newValue.id\r\n          }\r\n        });\r\n      }}\r\n      getOptionLabel={option => option.name}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          type=\"text\"\r\n          name=\"continent\"\r\n          label=\"Continent\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          required\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectContinents;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { saveCountry } from '../../../utils/api';\r\nimport FormModal from '../../molecules/form-modal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport handleApiError from '../../../utils/handle-api-error';\r\nimport SelectContinents from '../../fields/select-continents';\r\n\r\nconst CountriesForm = ({ onSuccess, open, close }) => {\r\n  const [fields, setField] = useState({});\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      await saveCountry(fields);\r\n      setField({});\r\n      setMessage(null);\r\n      onSuccess();\r\n    } catch (error) {\r\n      const err = await handleApiError(error);\r\n      setMessage(err.message);\r\n    }\r\n  };\r\n\r\n  const handleInput = event => {\r\n    const { target = {} } = event;\r\n    const { name, value } = target;\r\n    setField({\r\n      ...fields,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  console.log('fields', fields)\r\n\r\n  return (\r\n    <FormModal\r\n      open={open}\r\n      close={close}\r\n      name=\"Add Country\"\r\n      handleSubmit={handleSubmit}\r\n    >\r\n      {message && message}\r\n      <TextField\r\n        name=\"code\"\r\n        label=\"Code\"\r\n        variant=\"outlined\"\r\n        defaultValue={fields.code}\r\n        onChange={handleInput}\r\n        fullWidth\r\n        required\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"name\"\r\n        label=\"Name\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={handleInput}\r\n        required\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"nativeName\"\r\n        label=\"Native Name\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={handleInput}\r\n        required\r\n      />\r\n      <TextField\r\n        type=\"text\"\r\n        name=\"coords\"\r\n        label=\"GeoCoords\"\r\n        helperText=\"2.194216,5.2010515\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={handleInput}\r\n        required\r\n      />\r\n      <SelectContinents name=\"continent\" onChange={ handleInput } />\r\n    </FormModal>\r\n  );\r\n};\r\n\r\nexport default CountriesForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { deleteCountry } from '../../../utils/api';\r\nimport DeleteForever from '@material-ui/icons/DeleteForever';\r\n\r\nconst useStyles = makeStyles({\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nconst CountriesList = ({ list, onDeleteSuccess }) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleDelete = async (id) => {\r\n    try{\r\n      console.log('id', id)\r\n      await deleteCountry(id)\r\n      onDeleteSuccess()\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Toolbar variant=\"regular\" className={classes.toolbar}>\r\n        <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Countries\r\n        </Typography>\r\n        <TextField label=\"Search\" />\r\n      </Toolbar>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell component=\"th\">ID</TableCell>\r\n              <TableCell component=\"th\">CODE</TableCell>\r\n              <TableCell component=\"th\">NAME</TableCell>\r\n              <TableCell component=\"th\">NATIVE</TableCell>\r\n              <TableCell component=\"th\">CONTINENT</TableCell>\r\n              <TableCell component=\"th\" align=\"right\">\r\n                COORDS\r\n              </TableCell>\r\n              <TableCell  align=\"right\">DELETE</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {list.length > 0 ? (\r\n              list.map(item => (\r\n                <TableRow key={item.id}>\r\n                  <TableCell>{item.id}</TableCell>\r\n                  <TableCell>{item.code}</TableCell>\r\n                  <TableCell>{item.name}</TableCell>\r\n                  <TableCell>{item.nativeName}</TableCell>\r\n                  <TableCell>{item?.continent?.name}</TableCell>\r\n                  <TableCell align=\"right\">{item.coords}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton onClick={() => handleDelete(item.id)}>\r\n                      <DeleteForever />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan=\"7\">\r\n                  No data. Make sure to re-import data from the json file\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        count={list.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ContinentsList from '../../components/organisms/continents-list';\r\nimport ContinentsForm from '../../components/organisms/continents-form';\r\nimport { getCountries } from '../../utils/api';\r\nimport Container from '@material-ui/core/Container';\r\nimport AddFab from '../../components/molecules/add-fab';\r\nimport CountriesForm from '../../components/organisms/countries-form';\r\nimport CountriesList from '../../components/organisms/countries-list';\r\n\r\nconst CountriesPage = () => {\r\n  const [continents, setContinents] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const updateCountries = () => {\r\n    getCountries().then(res => setContinents(res.data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <CountriesForm\r\n        open={open}\r\n        close={ () => setOpen(false)}\r\n        onSuccess={() => updateCountries()}\r\n      />\r\n      <CountriesList list={continents} onDeleteSuccess={() => updateCountries()} />\r\n      <AddFab onClick={() => setOpen(!open)} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CountriesPage;\r\n","import React from 'react'\r\n\r\nconst RegionsPage = () => {\r\n  return <div>Regions page</div>\r\n}\r\n\r\nexport default RegionsPage","import React from 'react'\r\n\r\nconst CitiesPage = () => {\r\n  return <div>cities page</div>\r\n}\r\n\r\nexport default CitiesPage","import React from 'react'\r\n\r\nconst LanguagesPage = () => {\r\n  return <div>Languages page</div>\r\n}\r\n\r\nexport default LanguagesPage","import React from 'react'\r\n\r\nconst CurrenciesPage = () => {\r\n  return <div>Currencies page</div>\r\n}\r\n\r\nexport default CurrenciesPage","import {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBarOpen: {\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  appBarHidden: {\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 240,\r\n    },\r\n  },\r\n  menuButtonOpen: {\r\n\r\n  },\r\n  menuButtonHidden: {\r\n\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({ open, toggleDrawer }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBarOpen, open && classes.appBarHidden)}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={toggleDrawer}\r\n          className={clsx(classes.menuButtonOpen, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          World Places\r\n        </Typography>\r\n        <a target=\"_blank\" href=\"https://github.com/jimmyjamieson/world-places\">\r\n          <GitHubIcon />\r\n        </a>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Toolbar } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawerPaper: {\r\n    position: 'absolute',\r\n    [theme.breakpoints.up('md')]: {\r\n      position: 'relative',\r\n    },\r\n    whiteSpace: 'nowrap',\r\n    width: 240,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst Navigation = ({ open, handleDrawerClose }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <Toolbar>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Divider />\r\n      <Button component={NavLink} to=\"/\">\r\n        Home\r\n      </Button>\r\n      <Button component={NavLink} to=\"/continents\" color=\"inherit\">\r\n        Continents\r\n      </Button>\r\n      <Button component={NavLink} to=\"/countries\" color=\"inherit\">\r\n        Countries\r\n      </Button>\r\n      <Button component={NavLink} to=\"/regions\" color=\"inherit\">\r\n        Regions\r\n      </Button>\r\n      <Button component={NavLink} to=\"/cities\" color=\"inherit\">\r\n        Cities\r\n      </Button>\r\n      <Button component={NavLink} to=\"/languages\" color=\"inherit\">\r\n        Languages\r\n      </Button>\r\n      <Button component={NavLink} to=\"/currencies\" color=\"inherit\">\r\n        Currencies\r\n      </Button>\r\n      <Divider />\r\n      <Button component={NavLink} to=\"/currencies\" color=\"inherit\">\r\n        Download\r\n      </Button>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst Content = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100vw',\r\n    zIndex: 10,\r\n  },\r\n});\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\nexport default Footer","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HomePage from './pages/home';\nimport ContinentsPage from './pages/continents';\nimport CountriesPage from './pages/countries';\nimport RegionsPage from './pages/regions';\nimport CitiesPage from './pages/cities';\nimport LanguagesPage from './pages/languages';\nimport CurrenciesPage from './pages/currencies';\nimport Header from './components/molecules/header';\nimport Navigation from './components/molecules/navigation';\nimport Content from './components/molecules/content';\nimport Footer from './components/molecules/footer';\nimport { isMobile } from './utils/is-mobile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(!isMobile());\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const toggleDrawer = () => {\n    setOpen(!open)\n  }\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header open={ open } toggleDrawer={ toggleDrawer } />\n        <Navigation open={ open } handleDrawerClose={ handleDrawerClose } />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/continents\">\n              <ContinentsPage />\n            </Route>\n            <Route path=\"/countries\">\n              <CountriesPage />\n            </Route>\n            <Route path=\"/regions\">\n              <RegionsPage />\n            </Route>\n            <Route path=\"/cities\">\n              <CitiesPage />\n            </Route>\n            <Route path=\"/languages\">\n              <LanguagesPage />\n            </Route>\n            <Route path=\"/currencies\">\n              <CurrenciesPage />\n            </Route>\n          </Switch>\n        </Content>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","export const isMobile = () => {\r\n  let check = false;\r\n  (function(a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n        a,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4),\r\n      )\r\n    )\r\n      check = true;\r\n  })(navigator.userAgent || navigator.vendor || window.opera);\r\n  return check;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2283da78.svg\";"],"sourceRoot":""}