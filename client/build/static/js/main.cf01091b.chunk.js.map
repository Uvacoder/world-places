{"version":3,"sources":["pages/home/index.js","components/organisms/dynamic-table/table-toolbar.js","components/organisms/dynamic-table/table-header-sort-icon.js","components/organisms/dynamic-table/table-header-column.js","components/organisms/dynamic-table/table-header.js","components/organisms/dynamic-table/table-item-row.js","components/organisms/dynamic-table/table-error.js","components/molecules/add-fab/index.js","components/organisms/dynamic-table/index.js","utils/api.js","components/fields/auto-complete/index.js","components/fields/auto-complete-countries/index.js","components/fields/auto-complete-regions/index.js","components/fields/auto-complete-languages/index.js","components/fields/auto-complete-currencies/index.js","components/fields/field/index.js","utils/form-validation.js","components/organisms/dynamic-form/index.js","components/forms/country-form/index.js","pages/countries/index.js","components/forms/region-form/index.js","pages/regions/index.js","components/forms/city-form/index.js","pages/cities/index.js","components/forms/language-form/index.js","pages/languages/index.js","components/forms/currency-form/index.js","pages/currencies/index.js","components/molecules/header/index.js","components/molecules/navigation/index.js","components/molecules/content/index.js","App.js","components/molecules/footer/index.js","utils/is-mobile.js","serviceWorker.js","index.js","logo.svg"],"names":["HomePage","Card","CardActionArea","CardMedia","image","logo","CardContent","Typography","variant","gutterBottom","CardActions","Button","color","target","href","useStyles","makeStyles","toolbar","display","alignItems","justifyContent","TableToolbar","memo","name","setSearchQuery","classes","Toolbar","className","id","component","toUpperCase","TextField","label","onChange","event","transformSearch","$or","$contL","value","nativeName","code","iconWrapper","icon","TableHeaderSortIcon","direction","fontSize","theme","innerTableCellSelected","palette","primary","main","TableHeaderColumn","align","children","order","setOrder","columnKey","split","isActiveOrder","TableCell","onClick","dir","clsx","TableHeader","config","columns","TableHead","TableRow","map","col","key","TableItemRow","row","handleDelete","handleOpenForm","IconButton","TableError","tableColumnCount","severity","style","colSpan","Alert","fab","position","bottom","right","AddFab","Fab","aria-label","DynamicTable","fetchData","deleteData","formComponent","TableContainer","Table","useState","isLoading","setIsLoading","data","setData","count","setCount","page","setPage","searchQuery","rows","rowsPerPage","setRowsPerPage","error","setError","open","form","setForm","Form","getData","params","limit","sort","s","query","alwaysPaginate","cache","then","res","total","useEffect","handleSortOrder","a","handleSearchQuery","window","confirm","handleChangePage","newPage","handleChangeRowsPerPage","handleCloseForm","shouldRenderRows","length","altName","Paper","onSuccess","close","LinearProgress","width","TableBody","openForm","TablePagination","rowsPerPageOptions","onChangePage","onChangeRowsPerPage","api","axios","create","baseURL","timeout","getCountries","getCountry","createCountry","input","post","updateCountry","patch","deleteCountry","delete","getRegions","getRegion","createRegion","countryCode","country","updateRegion","deleteRegion","getCities","getCity","createCity","updateCity","deleteCity","getLanguages","getLanuage","createLanguage","updateLanguage","deleteLanguage","getCurrencies","getCurrency","createCurrency","updateCurrency","deleteCurrency","AutoComplete","layoutProps","defaultValueProp","defaultValue","rest","options","setOptions","mounted","console","loading","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","Fragment","CircularProgress","size","AutoCompleteCountries","AutoCompleteRegions","AutoCompleteLanguages","AutoCompleteCurrencies","fullWidth","Field","type","renderFieldType","validations","email","coords","DyanmicForm","fetchDataItem","updateDataItem","createDataItem","useForm","handleSubmit","control","errors","register","required","formData","setFormData","isEditing","formTitle","onSubmit","values","Dialog","AppBar","edge","DialogContent","ref","fields","field","Box","p","as","helperText","message","rules","pattern","RegExp","validation","renderFields","DialogActions","CountryForm","tableConfig","CountriesPage","Container","RegionForm","RegionsPage","CityForm","CitiesPage","LanguageForm","LanguagesPage","CurrencyForm","CurrenciesPage","appBarOpen","breakpoints","up","paddingLeft","appBarHidden","menuButtonOpen","menuButtonHidden","title","flexGrow","Header","toggleDrawer","rel","drawerPaper","transitions","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","transition","leavingScreen","spacing","paper","padding","overflow","flexDirection","Navigation","handleDrawerClose","Drawer","Divider","NavLink","to","appBarSpacer","mixins","content","height","container","paddingTop","paddingBottom","Content","root","zIndex","App","React","check","navigator","userAgent","vendor","opera","test","substr","isMobile","setOpen","CssBaseline","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.cf01091b.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardActions,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport logo from './../../logo.svg';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardActionArea>\r\n          <CardMedia image={logo} />\r\n          <CardContent>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              Welcome to World Places. A Open Source and human edited resource\r\n              of all countries, region/states, cities/towns across the world.\r\n              You can update the information any time by cloning the repo -\r\n              making updates into the local data, re-exporting the json, and\r\n              creating a pull request.\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/jimmyjamieson/world-places\"\r\n            >\r\n              GitHub\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              target=\"_blank\"\r\n              href=\"http://localhost:4000/api\"\r\n            >\r\n              API\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              target=\"_blank\"\r\n              href=\"http://localhost:4000/docs\"\r\n            >\r\n              DOCS\r\n            </Button>\r\n          </CardActions>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { memo } from 'react';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nconst TableToolbar = memo(({ name = 'Listing', setSearchQuery }) => {\r\n  const classes = useStyles();\r\n\r\n  const transformSearchQuery = event => {\r\n    const target = event?.target;\r\n\r\n    const transformSearch = {\r\n      $or: [\r\n        {\r\n          name: {\r\n            $contL: target?.value,\r\n          },\r\n        },\r\n        {\r\n          nativeName: {\r\n            $contL: target?.value,\r\n          },\r\n        },\r\n        {\r\n          code: {\r\n            $contL: target?.value,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n\r\n    setSearchQuery(transformSearch);\r\n  };\r\n\r\n  return (\r\n    <Toolbar variant=\"regular\" className={classes.toolbar}>\r\n      <Typography variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n        {name.toUpperCase()}\r\n      </Typography>\r\n      <TextField label=\"Search\" onChange={transformSearchQuery} />\r\n    </Toolbar>\r\n  );\r\n});\r\n\r\nexport default TableToolbar;\r\n","import React, { memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nconst useStyles = makeStyles({\r\n  iconWrapper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {},\r\n});\r\n\r\nconst TableHeaderSortIcon = memo(({ direction }) => {\r\n  const classes = useStyles();\r\n\r\n  function showIconDirection() {\r\n    if (direction === 'ASC') {\r\n      return <ArrowDropDownIcon className={classes.icon} fontSize=\"small\" />;\r\n    } else {\r\n      return <ArrowDropUpIcon className={classes.icon} fontSize=\"small\" />;\r\n    }\r\n  }\r\n\r\n  return <div className={classes.iconWrapper}>{showIconDirection()}</div>;\r\n});\r\n\r\nexport default TableHeaderSortIcon;\r\n","import React, { memo } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHeaderSortIcon from './table-header-sort-icon';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  innerTableCellSelected: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst TableHeaderColumn = memo(\r\n  ({ align, children, order, setOrder, columnKey }) => {\r\n    const classes = useStyles();\r\n    const name = order?.split(',')[0];\r\n    const direction = order?.split(',')[1];\r\n    const isActiveOrder = name === columnKey;\r\n\r\n    function handleSetOrder() {\r\n      const dir = direction === 'ASC' ? 'DESC' : 'ASC';\r\n      const order = `${columnKey},${dir}`;\r\n\r\n      setOrder(order);\r\n    }\r\n\r\n    return (\r\n      <TableCell align={align} onClick={handleSetOrder}>\r\n        <Button\r\n          className={clsx(isActiveOrder && classes.innerTableCellSelected)}\r\n        >\r\n          {children}{' '}\r\n          {isActiveOrder && <TableHeaderSortIcon direction={direction} />}\r\n        </Button>\r\n      </TableCell>\r\n    );\r\n  },\r\n);\r\n\r\nexport default TableHeaderColumn;\r\n","import React, { memo } from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableHeaderColumn from './table-header-column';\r\n\r\nconst TableHeader = memo(({ config = {}, order, setOrder }) => {\r\n  const { columns } = config;\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns &&\r\n          columns.map(col => {\r\n            return (\r\n              <TableHeaderColumn\r\n                key={col.key}\r\n                columnKey={col.key}\r\n                align={col.align || 'left'}\r\n                order={order}\r\n                setOrder={setOrder}\r\n              >\r\n                {col.name.toUpperCase()}\r\n              </TableHeaderColumn>\r\n            );\r\n          })}\r\n        <TableCell align=\"right\">EDIT</TableCell>\r\n        <TableCell align=\"right\">DELETE</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n});\r\n\r\nexport default TableHeader;\r\n","import React, { memo } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteForever from '@material-ui/icons/DeleteForever';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst TableItemRow = memo(({ row, handleDelete, handleOpenForm, columns }) => {\r\n  const renderTableCells = () => {\r\n    return columns.map(col => {\r\n      return <TableCell align={col.align || 'left'} key={col.id}>{row[col.value]}</TableCell>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TableRow key={row.id}>\r\n      {renderTableCells()}\r\n      <TableCell align=\"right\">\r\n        <IconButton onClick={() => handleOpenForm(row.id)}>\r\n          <Edit fontSize=\"small\" />\r\n        </IconButton>\r\n      </TableCell>\r\n      <TableCell align=\"right\">\r\n        <IconButton onClick={() => handleDelete(row.id)}>\r\n          <DeleteForever fontSize=\"small\" />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n});\r\n\r\nexport default TableItemRow;\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nconst TableError = ({ children, tableColumnCount, severity = 'error', style }) => {\r\n  return (\r\n    <TableRow>\r\n      <TableCell colSpan={tableColumnCount}>\r\n        <Alert severity={ severity }>{children}</Alert>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableError;\r\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: '2rem',\r\n    right: '2rem'\r\n  },\r\n}));\r\n\r\nconst AddFab = ({ onClick }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fab className={classes.fab} color=\"secondary\" aria-label=\"add\" onClick={onClick}>\r\n      <AddIcon />\r\n    </Fab>\r\n  )\r\n}\r\n\r\nexport default AddFab","import React, { memo, useState, useEffect } from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableToolbar from './table-toolbar';\r\nimport TableHeader from './table-header';\r\nimport TableItemRow from './table-item-row';\r\nimport TableError from './table-error';\r\nimport AddFab from '../../molecules/add-fab';\r\n\r\nconst DynamicTable = memo(\r\n  ({\r\n    fetchData,\r\n    deleteData,\r\n    config,\r\n    formComponent,\r\n  }) => {\r\n    if (!config) {\r\n      return (\r\n        <TableContainer>\r\n          <Table>\r\n            <TableError>No table config provided</TableError>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    }\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [count, setCount] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [order, setOrder] = useState(config.order || 'name, ASC');\r\n    const [searchQuery, setSearchQuery] = useState({});\r\n    const [rowsPerPage, setRowsPerPage] = useState(config.rows || 10);\r\n    const [error, setError] = useState(null);\r\n    const [form, setForm] = useState({\r\n      open: false,\r\n      id: null,\r\n    });\r\n\r\n    const Form = formComponent;\r\n\r\n    const getData = () => {\r\n      if (!fetchData) {\r\n        setError(\r\n          'No fetch data function exists, please add a fetchData function',\r\n        );\r\n        return null;\r\n      }\r\n\r\n      const params = {\r\n        limit: rowsPerPage,\r\n        page,\r\n        sort: order,\r\n        s: searchQuery,\r\n        query: {\r\n          alwaysPaginate: true,\r\n        },\r\n        cache: config.cache,\r\n      };\r\n\r\n      setIsLoading(true);\r\n      fetchData(params).then(res => {\r\n        setCount(res.data.total);\r\n        setData(res.data);\r\n        setIsLoading(false);\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n      getData();\r\n    }, [page, searchQuery, order]);\r\n\r\n    const handleSortOrder = async data => {\r\n      setOrder(data);\r\n    };\r\n\r\n    const handleSearchQuery = async query => {\r\n      setSearchQuery(query);\r\n      setPage(1);\r\n    };\r\n\r\n    const handleDelete = async id => {\r\n      const confirmed = window.confirm('Are you sure you want to delete?');\r\n      if (confirmed) {\r\n        try {\r\n          await deleteData(id);\r\n          await getData();\r\n        } catch (e) {}\r\n      }\r\n    };\r\n\r\n    const handleFormSuccess = () => {\r\n      getData();\r\n      handleCloseForm()\r\n    };\r\n\r\n    const handleChangePage = async (event, newPage) => {\r\n      await setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = async event => {\r\n      await setRowsPerPage(+event.target.value);\r\n      await setPage(0);\r\n    };\r\n\r\n    const handleOpenForm = id => {\r\n      setForm({ open: true, id });\r\n    };\r\n\r\n    const handleCloseForm = () => {\r\n      setForm({ open: false, id: null });\r\n    };\r\n\r\n    /**\r\n     * Common variables\r\n     */\r\n    const { data: rows } = data;\r\n    const shouldRenderRows = rows && rows.length > 0;\r\n    const { columns = [], name = '', altName = '' } = config;\r\n    const tableColumnCount = columns.length + 2;\r\n\r\n    return (\r\n      <Paper>\r\n        <AddFab onClick={() => handleOpenForm()} />\r\n        {form.open && (\r\n          <Form\r\n            {...form}\r\n            onSuccess={handleFormSuccess}\r\n            close={handleCloseForm}\r\n          />\r\n        )}\r\n        <TableToolbar name={name} setSearchQuery={handleSearchQuery} />\r\n        {isLoading && <LinearProgress style={{ width: '100%' }} />}\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHeader\r\n              tableColumnCount={tableColumnCount}\r\n              order={order}\r\n              setOrder={handleSortOrder}\r\n              config={config}\r\n            />\r\n            <TableBody>\r\n              {error && (\r\n                <TableError tableColumnCount={tableColumnCount}>\r\n                  {error}\r\n                </TableError>\r\n              )}\r\n              {shouldRenderRows\r\n                ? rows.map(row => {\r\n                    return (\r\n                      <TableItemRow\r\n                        key={row.id + row.code}\r\n                        row={row}\r\n                        columns={columns}\r\n                        tableColumnCount={tableColumnCount}\r\n                        handleDelete={handleDelete}\r\n                        handleOpenForm={handleOpenForm}\r\n                        openForm={() => {}}\r\n                      />\r\n                    );\r\n                  })\r\n                : !isLoading &&\r\n                  fetchData && (\r\n                    <TableError\r\n                      tableColumnCount={tableColumnCount}\r\n                      severity=\"warning\"\r\n                    >\r\n                      Nothing found yet in {name}\r\n                    </TableError>\r\n                  )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          component=\"div\"\r\n          rowsPerPageOptions={[8, 15, 25, 100, 500, 1000]}\r\n          count={count}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  },\r\n);\r\n\r\nexport default DynamicTable;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:4000/api',\r\n  timeout: 1000000,\r\n});\r\n\r\n/**\r\n * Countries\r\n */\r\n\r\nexport const getCountries = params => {\r\n  return api('countries', { params });\r\n};\r\n\r\nexport const getCountry = id => {\r\n  return api(`countries/${id}`)\r\n};\r\n\r\nexport const createCountry = (input = {}) => {\r\n  return api.post('countries', input);\r\n};\r\n\r\nexport const updateCountry = (input = {}) => {\r\n  return api.patch(`countries/${input.id}`, input);\r\n};\r\n\r\nexport const deleteCountry = id => {\r\n  return api.delete(`countries/${id}`);\r\n};\r\n\r\n/**\r\n * Regions\r\n */\r\n\r\nexport const getRegions = params => {\r\n  return api('regions', { params });\r\n};\r\n\r\nexport const getRegion = id => {\r\n  return api(`regions/${id}`)\r\n};\r\n\r\nexport const createRegion = (input = {}) => {\r\n  const params = {\r\n    ...input,\r\n    countryCode: input?.country?.code\r\n  }\r\n  return api.post('regions', params);\r\n};\r\n\r\nexport const updateRegion = (input = {}) => {\r\n  const params = {\r\n    ...input,\r\n    countryCode: input?.country?.code\r\n  }\r\n  return api.patch(`regions/${input.id}`, params);\r\n};\r\n\r\nexport const deleteRegion = id => {\r\n  return api.delete(`regions/${id}`);\r\n};\r\n\r\n/**\r\n * Cities\r\n */\r\n\r\nexport const getCities = params => {\r\n  return api('cities', { params });\r\n};\r\n\r\nexport const getCity = id => {\r\n  return api(`cities/${id}`)\r\n};\r\n\r\nexport const createCity = (input = {}) => {\r\n  return api.post('cities', input);\r\n};\r\n\r\nexport const updateCity = (input = {}) => {\r\n  return api.patch(`cities/${input.id}`, input);\r\n};\r\n\r\nexport const deleteCity = id => {\r\n  return api.delete(`cities/${id}`);\r\n};\r\n\r\n\r\n/**\r\n * Languages\r\n */\r\n\r\nexport const getLanguages = params => {\r\n  return api('languages', { params });\r\n};\r\n\r\nexport const getLanuage = id => {\r\n  return api(`languages/${id}`)\r\n};\r\n\r\nexport const createLanguage = (input = {}) => {\r\n  return api.post('languages', input);\r\n};\r\n\r\nexport const updateLanguage = (input = {}) => {\r\n  return api.patch(`languages/${input.id}`, input);\r\n};\r\n\r\nexport const deleteLanguage = id => {\r\n  return api.delete(`languages/${id}`);\r\n};\r\n\r\n\r\n/**\r\n * Currencies\r\n */\r\n\r\nexport const getCurrencies = params => {\r\n  return api('currencies', { params });\r\n};\r\n\r\nexport const getCurrency = id => {\r\n  return api(`currencies/${id}`)\r\n};\r\n\r\nexport const createCurrency = (input = {}) => {\r\n  return api.post('currencies', input);\r\n};\r\n\r\nexport const updateCurrency = (input = {}) => {\r\n  return api.patch(`currencies/${input.id}`, input);\r\n};\r\n\r\nexport const deleteCurrency = id => {\r\n  return api.delete(`currencies/${id}`);\r\n};","import React, { useEffect, useState } from 'react';\r\nimport MdAutocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst AutoComplete = ({\r\n  fetchData,\r\n  onChange,\r\n  layoutProps,\r\n  defaultValueProp,\r\n  defaultValue,\r\n  ...rest\r\n}) => {\r\n  const [options, setOptions] = useState([]);\r\n  const isLoading = options.length === 0;\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    if (!isLoading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      try {\r\n        const getData = await fetchData();\r\n        const data = await getData?.data;\r\n        if (mounted) {\r\n          setOptions(data);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [fetchData, isLoading]);\r\n\r\n  return (\r\n    <MdAutocomplete\r\n      options={options}\r\n      loading={isLoading}\r\n      defaultValue={defaultValueProp}\r\n      getOptionLabel={option => option?.name}\r\n      onChange={(event, newValue) => {\r\n        onChange(newValue);\r\n      }}\r\n      renderInput={params => (\r\n        <TextField\r\n          defaultValue={defaultValue}\r\n          {...params}\r\n          {...layoutProps}\r\n          {...rest}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {isLoading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import React from 'react';\r\nimport { getCountries } from '../../../utils/api';\r\nimport AutoComplete from '../auto-complete';\r\n\r\nconst AutoCompleteCountries = ({ ...rest }) => {\r\n  return <AutoComplete fetchData={getCountries} {...rest} />;\r\n};\r\n\r\nexport default AutoCompleteCountries;\r\n","import React from 'react';\r\nimport { getRegions } from '../../../utils/api';\r\nimport AutoComplete from '../auto-complete';\r\n\r\nconst AutoCompleteRegions = ({ ...rest }) => {\r\n  return <AutoComplete fetchData={getRegions} {...rest} />;\r\n};\r\n\r\nexport default AutoCompleteRegions;\r\n","import React from 'react';\r\nimport { getLanguages } from '../../../utils/api';\r\nimport AutoComplete from '../auto-complete';\r\n\r\nconst AutoCompleteLanguages = ({ ...rest }) => {\r\n  return <AutoComplete fetchData={getLanguages} {...rest} />;\r\n};\r\n\r\nexport default AutoCompleteLanguages;\r\n","import React from 'react';\r\nimport { getCurrencies } from '../../../utils/api';\r\nimport AutoComplete from '../auto-complete';\r\n\r\nconst AutoCompleteCurrencies = ({ ...rest }) => {\r\n  return <AutoComplete fetchData={getCurrencies} {...rest} />;\r\n};\r\n\r\nexport default AutoCompleteCurrencies;\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AutoCompleteCountries from '../auto-complete-countries';\r\nimport AutoCompleteRegions from '../auto-complete-regions';\r\nimport AutoCompleteLanguages from '../auto-complete-languages';\r\nimport AutoCompleteCurrencies from '../auto-complete-currencies';\r\n\r\nconst layoutProps = {\r\n  variant: 'outlined',\r\n  fullWidth: true,\r\n};\r\n\r\nconst Field = ({ type, key, ...rest }) => {\r\n\r\n  function renderFieldType() {\r\n    switch (type) {\r\n      case 'countrySelect':\r\n        return (\r\n          <AutoCompleteCountries\r\n            layoutProps={layoutProps}\r\n            {...rest}\r\n          />\r\n        );\r\n      case 'regionSelect':\r\n        return (\r\n          <AutoCompleteRegions\r\n            layoutProps={layoutProps}\r\n            {...rest}\r\n          />\r\n        );\r\n      case 'languageSelect':\r\n        return (\r\n          <AutoCompleteLanguages\r\n            layoutProps={layoutProps}\r\n            {...rest}\r\n          />\r\n        );\r\n      case 'currencySelect':\r\n        return (\r\n          <AutoCompleteCurrencies\r\n            layoutProps={layoutProps}\r\n            {...rest}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <TextField\r\n            {...layoutProps}\r\n            {...rest}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  return renderFieldType();\r\n};\r\n\r\nexport default Field;\r\n","// prettier-ignore\r\nconst validations = {\r\n  email: '/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,}$/i',\r\n  coords: '^[-+]?([1-8]?\\\\d(\\\\.\\\\d+)?|90(\\\\.0+)?),\\\\s*[-+]?(180(\\\\.0+)?|((1[0-7]\\\\d)|([1-9]?\\\\d))(\\\\.\\\\d+)?)$',\r\n};\r\n\r\nexport default validations;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Box from '@material-ui/core/Box';\r\nimport Field from '../../fields/field';\r\nimport validations from '../../../utils/form-validation';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nconst DyanmicForm = ({\r\n  id,\r\n  open,\r\n  close,\r\n  fetchDataItem,\r\n  updateDataItem,\r\n  createDataItem,\r\n  onSuccess,\r\n  config,\r\n}) => {\r\n  const classes = useStyles();\r\n  const { handleSubmit, control, errors, register, required } = useForm();\r\n  const {name } = config\r\n  const [formData, setFormData] = useState();\r\n  const isEditing = !!id;\r\n  const formTitle = isEditing\r\n    ? `Editing ${name} ${formData?.name}`\r\n    : `Add a ${name}`;\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    (async () => {\r\n      try {\r\n        const data = await fetchDataItem(id);\r\n        if (mounted) {\r\n          setFormData(data?.data);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    })();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit = async values => {\r\n    if (isEditing) {\r\n      await updateDataItem(values);\r\n    } else {\r\n      await createDataItem(values);\r\n    }\r\n    return onSuccess()\r\n  };\r\n\r\n  function renderFields() {\r\n    const { fields = [] } = config;\r\n\r\n    return (\r\n      fields.length > 0 &&\r\n      fields.map(field => {\r\n        return (\r\n          <Box p={1}>\r\n            <Controller\r\n              as={Field}\r\n              type={field.type}\r\n              name={field.name}\r\n              label={field.label}\r\n              control={control}\r\n              error={!!errors[field.name]}\r\n              defaultValue={formData && formData[field.name]}\r\n              defaultValueProp={formData && formData[field.name]}\r\n              key={formData && formData[field.name]}\r\n              helperText={errors.name ? errors.name.message : field.helperText}\r\n              rules={{\r\n                required: 'Required',\r\n                pattern: {\r\n                  value: new RegExp(validations[field?.validation]),\r\n                  message: `Not a valid ${field.name}`,\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} fullWidth>\r\n      <AppBar position=\"relative\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography variant=\"h6\">{formTitle}</Typography>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={close}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <DialogContent>\r\n          {isEditing && (\r\n            <input\r\n              name=\"id\"\r\n              type=\"hidden\"\r\n              ref={register({ required })}\r\n              defaultValue={formData?.id}\r\n            />\r\n          )}\r\n          {renderFields()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"submit\" color=\"primary\">\r\n            {isEditing ? 'Save' : 'Create'}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DyanmicForm;\r\n","import React, { memo } from 'react';\r\nimport { createCountry, getCountry, updateCountry } from '../../../utils/api';\r\nimport DyanmicForm from '../../organisms/dynamic-form';\r\n\r\nconst config = {\r\n  name: 'Country',\r\n  fields: [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n      type: 'text',\r\n      helperText: 'The plain text name of the region',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'nativeName',\r\n      label: 'Native name',\r\n      type: 'text',\r\n      helperText: 'The native name including special characters',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'code',\r\n      label: 'Code',\r\n      type: 'text',\r\n      helperText: 'Region code in format AB',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'language',\r\n      label: 'Language',\r\n      type: 'languageSelect',\r\n      helperText: 'Select the language of this country',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'currency',\r\n      label: 'Currency',\r\n      type: 'currencySelect',\r\n      helperText: 'Select the currency of this country',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'coords',\r\n      label: 'Coords',\r\n      type: 'text',\r\n      helperText: 'Must be in the format 0.000,0.000',\r\n      validation: 'coords',\r\n    },\r\n  ],\r\n};\r\n\r\nconst CountryForm = memo(({ open, close, id, onSuccess }) => {\r\n  return (\r\n    <DyanmicForm\r\n      id={id}\r\n      fetchDataItem={getCountry}\r\n      createDataItem={createCountry}\r\n      updateDataItem={updateCountry}\r\n      onSuccess={onSuccess}\r\n      open={open}\r\n      close={close}\r\n      config={config}\r\n    />\r\n  );\r\n});\r\n\r\nexport default CountryForm;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport DynamicTable from '../../components/organisms/dynamic-table';\r\nimport { deleteCountry, getCountries } from '../../utils/api';\r\nimport CountryForm from '../../components/forms/country-form';\r\n\r\nconst tableConfig = {\r\n  name: 'Countries',\r\n  altName: 'Country',\r\n  rows: 8,\r\n  order: 'name,ASC',\r\n  cache: 1,\r\n  columns: [\r\n    {\r\n      key: 'code',\r\n      name: 'CODE',\r\n      value: 'code',\r\n    },\r\n    {\r\n      key: 'name',\r\n      name: 'NAME',\r\n      value: 'name',\r\n    },\r\n    {\r\n      key: 'nativeName',\r\n      name: 'Native',\r\n      value: 'nativeName',\r\n    },\r\n    {\r\n      key: 'coords',\r\n      name: 'COORDS',\r\n      value: 'coords',\r\n      align: 'right',\r\n    },\r\n  ],\r\n};\r\n\r\nconst CountriesPage = () => {\r\n  return (\r\n    <Container>\r\n      <DynamicTable\r\n        config={tableConfig}\r\n        formComponent={CountryForm}\r\n        fetchData={getCountries}\r\n        deleteData={deleteCountry}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CountriesPage;\r\n","import React, { memo } from 'react';\r\nimport { createRegion, getRegion, updateRegion } from '../../../utils/api';\r\nimport DyanmicForm from '../../organisms/dynamic-form';\r\n\r\nconst config = {\r\n  name: 'Region',\r\n  fields: [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n      type: 'text',\r\n      helperText: 'The plain text name of the region',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'nativeName',\r\n      label: 'Native name',\r\n      type: 'text',\r\n      helperText: 'The native name including special characters',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'code',\r\n      label: 'Code',\r\n      type: 'text',\r\n      helperText: 'Region code in format AB',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'country',\r\n      label: 'Country',\r\n      type: 'countrySelect',\r\n      helperText: 'Select a country this region belongs to',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'coords',\r\n      label: 'Coords',\r\n      type: 'text',\r\n      helperText: 'Must be in the format 0.000,0.000',\r\n      validation: 'coords',\r\n    },\r\n  ],\r\n};\r\n\r\nconst RegionForm = memo(({ open, close, id, onSuccess }) => {\r\n  return (\r\n    <DyanmicForm\r\n      id={id}\r\n      fetchDataItem={getRegion}\r\n      createDataItem={createRegion}\r\n      updateDataItem={updateRegion}\r\n      onSuccess={onSuccess}\r\n      open={open}\r\n      close={close}\r\n      config={config}\r\n    />\r\n  );\r\n});\r\n\r\nexport default RegionForm;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport DynamicTable from '../../components/organisms/dynamic-table';\r\nimport { createRegion, deleteRegion, getRegion, getRegions, updateRegion } from '../../utils/api';\r\nimport RegionForm from '../../components/forms/region-form';\r\n\r\nconst tableConfig = {\r\n  name: 'Regions',\r\n  altName: 'Region',\r\n  rows: 8,\r\n  order: 'name,ASC',\r\n  cache: 1,\r\n  columns: [\r\n    {\r\n      key: 'code',\r\n      name: 'CODE',\r\n      value: 'code',\r\n    },\r\n    {\r\n      key: 'name',\r\n      name: 'NAME',\r\n      value: 'name',\r\n    },\r\n    {\r\n      key: 'countryCode',\r\n      name: 'COUNTRY CODE',\r\n      value: 'countryCode',\r\n    },\r\n    {\r\n      key: 'coords',\r\n      name: 'COORDS',\r\n      value: 'coords',\r\n      align: 'right',\r\n    },\r\n  ],\r\n};\r\n\r\nconst RegionsPage = () => {\r\n  return (\r\n    <Container>\r\n      <DynamicTable\r\n        config={tableConfig}\r\n        formComponent={RegionForm}\r\n        fetchData={getRegions}\r\n        deleteData={deleteRegion}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegionsPage;\r\n","import React, { memo } from 'react';\r\nimport {\r\n  createCity,\r\n  getCity,\r\n  updateCity,\r\n} from '../../../utils/api';\r\nimport DyanmicForm from '../../organisms/dynamic-form';\r\n\r\nconst config = {\r\n  name: 'City',\r\n  fields: [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n      type: 'text',\r\n      helperText: 'The plain text name of the town/city',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'nativeName',\r\n      label: 'Native name',\r\n      type: 'text',\r\n      helperText: 'The native name including special characters',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'code',\r\n      label: 'Code',\r\n      type: 'text',\r\n      helperText: 'City code',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'region',\r\n      label: 'Region',\r\n      type: 'regionSelect',\r\n      helperText: 'Select the region of this town/city',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'coords',\r\n      label: 'Coords',\r\n      type: 'text',\r\n      helperText: 'Must be in the format 0.000,0.000',\r\n      validation: 'coords',\r\n    },\r\n  ],\r\n};\r\n\r\nconst CityForm = memo(({ open, close, id, onSuccess }) => {\r\n  return (\r\n    <DyanmicForm\r\n      id={id}\r\n      fetchDataItem={getCity}\r\n      createDataItem={createCity}\r\n      updateDataItem={updateCity}\r\n      onSuccess={onSuccess}\r\n      open={open}\r\n      close={close}\r\n      config={config}\r\n    />\r\n  );\r\n});\r\n\r\nexport default CityForm;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport DynamicTable from '../../components/organisms/dynamic-table';\r\nimport { deleteCity, getCities } from '../../utils/api';\r\nimport CityForm from '../../components/forms/city-form';\r\n\r\nconst tableConfig = {\r\n  name: 'Countries',\r\n  altName: 'Country',\r\n  rows: 8,\r\n  order: 'name,ASC',\r\n  cache: 1,\r\n  columns: [\r\n    {\r\n      key: 'code',\r\n      name: 'CODE',\r\n      value: 'code',\r\n    },\r\n    {\r\n      key: 'name',\r\n      name: 'NAME',\r\n      value: 'name',\r\n    },\r\n    {\r\n      key: 'nativeName',\r\n      name: 'Native',\r\n      value: 'nativeName',\r\n    },\r\n    {\r\n      key: 'coords',\r\n      name: 'COORDS',\r\n      value: 'coords',\r\n      align: 'right',\r\n    },\r\n  ],\r\n};\r\n\r\nconst CitiesPage = () => {\r\n  return (\r\n    <Container>\r\n      <DynamicTable\r\n        config={tableConfig}\r\n        formComponent={CityForm}\r\n        fetchData={getCities}\r\n        deleteData={deleteCity}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CitiesPage;\r\n","import React, { memo } from 'react';\r\nimport {\r\n  createCity, createLanguage,\r\n  getCity, getLanuage,\r\n  updateCity, updateLanguage,\r\n} from '../../../utils/api';\r\nimport DyanmicForm from '../../organisms/dynamic-form';\r\n\r\nconst config = {\r\n  name: 'Language',\r\n  fields: [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n      type: 'text',\r\n      helperText: 'The plain text name of the language',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'nativeName',\r\n      label: 'Native name',\r\n      type: 'text',\r\n      helperText: 'The native name including special characters',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'code',\r\n      label: 'Code',\r\n      type: 'text',\r\n      helperText: 'ISO 639-1 code',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'code_iso_3',\r\n      label: 'ISO3 Code',\r\n      type: 'text',\r\n      helperText: 'ISO 639-2 code',\r\n      validation: null\r\n    },\r\n  ],\r\n};\r\n\r\nconst LanguageForm = memo(({ open, close, id, onSuccess }) => {\r\n  return (\r\n    <DyanmicForm\r\n      id={id}\r\n      fetchDataItem={getLanuage}\r\n      createDataItem={createLanguage}\r\n      updateDataItem={updateLanguage}\r\n      onSuccess={onSuccess}\r\n      open={open}\r\n      close={close}\r\n      config={config}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LanguageForm;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport DynamicTable from '../../components/organisms/dynamic-table';\r\nimport { deleteLanguage, getLanguages } from '../../utils/api';\r\nimport LanguageForm from '../../components/forms/language-form';\r\n\r\nconst tableConfig = {\r\n  name: 'Languages',\r\n  altName: 'Language',\r\n  rows: 8,\r\n  order: 'name,ASC',\r\n  cache: 1,\r\n  columns: [\r\n    {\r\n      key: 'code',\r\n      name: 'CODE',\r\n      value: 'code',\r\n    },\r\n    {\r\n      key: 'code_iso_3',\r\n      name: 'ISO3 Code',\r\n      value: 'code_iso_3'\r\n    },\r\n    {\r\n      key: 'name',\r\n      name: 'NAME',\r\n      value: 'name',\r\n    },\r\n    {\r\n      key: 'nativeName',\r\n      name: 'Native',\r\n      value: 'nativeName',\r\n    }\r\n  ],\r\n};\r\n\r\nconst LanguagesPage = () => {\r\n  return (\r\n    <Container>\r\n      <DynamicTable\r\n        config={tableConfig}\r\n        formComponent={LanguageForm}\r\n        fetchData={getLanguages}\r\n        deleteData={deleteLanguage}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LanguagesPage;\r\n","import React, { memo } from 'react';\r\nimport {\r\n  createCurrency,\r\n  getCurrency,\r\n  updateCurrency,\r\n} from '../../../utils/api';\r\nimport DyanmicForm from '../../organisms/dynamic-form';\r\n\r\nconst config = {\r\n  name: 'Currency',\r\n  fields: [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n      type: 'text',\r\n      helperText: 'The plain text name of the language',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'nativeName',\r\n      label: 'Native name',\r\n      type: 'text',\r\n      helperText: 'The native name including special characters',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'symbol',\r\n      label: 'Symbol',\r\n      type: 'text',\r\n      helperText: 'The currency symbol i.e &euro;',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'code',\r\n      label: 'Code',\r\n      type: 'text',\r\n      helperText: 'Currency code',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'number',\r\n      label: 'Number',\r\n      type: 'number',\r\n      helperText: 'The currency number',\r\n      validation: null,\r\n    },\r\n    {\r\n      name: 'decimals',\r\n      label: 'Decimals',\r\n      type: 'decimals',\r\n      helperText: 'The currency decimal point',\r\n      validation: null,\r\n    },\r\n  ],\r\n};\r\n\r\nconst CurrencyForm = memo(({ open, close, id, onSuccess }) => {\r\n  return (\r\n    <DyanmicForm\r\n      id={id}\r\n      fetchDataItem={getCurrency}\r\n      createDataItem={createCurrency}\r\n      updateDataItem={updateCurrency}\r\n      onSuccess={onSuccess}\r\n      open={open}\r\n      close={close}\r\n      config={config}\r\n    />\r\n  );\r\n});\r\n\r\nexport default CurrencyForm;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport DynamicTable from '../../components/organisms/dynamic-table';\r\nimport { deleteCurrency, getCurrencies } from '../../utils/api';\r\nimport CurrencyForm from '../../components/forms/currency-form';\r\n\r\nconst tableConfig = {\r\n  name: 'Currencies',\r\n  altName: 'Currency',\r\n  rows: 8,\r\n  order: 'name,ASC',\r\n  cache: 1,\r\n  columns: [\r\n    {\r\n      key: 'symbol',\r\n      name: 'SYMBOL',\r\n      value: 'symbol',\r\n    },\r\n    {\r\n      key: 'code',\r\n      name: 'CODE',\r\n      value: 'code',\r\n    },\r\n    {\r\n      key: 'name',\r\n      name: 'NAME',\r\n      value: 'name',\r\n    },\r\n    {\r\n      key: 'nativeName',\r\n      name: 'NATIVE',\r\n      value: 'nativeName',\r\n    },\r\n    {\r\n      key: 'number',\r\n      name: 'Number',\r\n      value: 'number',\r\n    },\r\n    {\r\n      key: 'decimals',\r\n      name: 'Decimals',\r\n      value: 'decimals',\r\n    },\r\n  ],\r\n};\r\n\r\nconst CurrenciesPage = () => {\r\n  return (\r\n    <Container>\r\n      <DynamicTable\r\n        config={tableConfig}\r\n        formComponent={CurrencyForm}\r\n        fetchData={getCurrencies}\r\n        deleteData={deleteCurrency}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CurrenciesPage;\r\n","import {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBarOpen: {\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  appBarHidden: {\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingLeft: 240,\r\n    },\r\n  },\r\n  menuButtonOpen: {\r\n\r\n  },\r\n  menuButtonHidden: {\r\n\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Header = ({ open, toggleDrawer }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"absolute\" className={clsx(classes.appBarOpen, open && classes.appBarHidden)}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={toggleDrawer}\r\n          className={clsx(classes.menuButtonOpen, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          World Places\r\n        </Typography>\r\n        <a target=\"_blank\" href=\"https://github.com/jimmyjamieson/world-places\" rel=\"noopener noreferrer\">\r\n          <GitHubIcon />\r\n        </a>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Divider, Toolbar } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawerPaper: {\r\n    position: 'absolute',\r\n    [theme.breakpoints.up('md')]: {\r\n      position: 'relative',\r\n    },\r\n    whiteSpace: 'nowrap',\r\n    width: 240,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n}));\r\n\r\nconst Navigation = ({ open, handleDrawerClose }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <Toolbar>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n      <Divider />\r\n      <Button component={NavLink} to=\"/\">\r\n        Home\r\n      </Button>\r\n      <Button component={NavLink} to=\"/countries\" color=\"inherit\">\r\n        Countries\r\n      </Button>\r\n      <Button component={NavLink} to=\"/regions\" color=\"inherit\">\r\n        Regions\r\n      </Button>\r\n      <Button component={NavLink} to=\"/cities\" color=\"inherit\">\r\n        Cities\r\n      </Button>\r\n      <Button component={NavLink} to=\"/languages\" color=\"inherit\">\r\n        Languages\r\n      </Button>\r\n      <Button component={NavLink} to=\"/currencies\" color=\"inherit\">\r\n        Currencies\r\n      </Button>\r\n      <Divider />\r\n      <Button component={NavLink} to=\"/currencies\" color=\"inherit\">\r\n        Download\r\n      </Button>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst Content = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      {children}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HomePage from './pages/home';\nimport CountriesPage from './pages/countries';\nimport RegionsPage from './pages/regions';\nimport CitiesPage from './pages/cities';\nimport LanguagesPage from './pages/languages';\nimport CurrenciesPage from './pages/currencies';\nimport Header from './components/molecules/header';\nimport Navigation from './components/molecules/navigation';\nimport Content from './components/molecules/content';\nimport Footer from './components/molecules/footer';\nimport { isMobile } from './utils/is-mobile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(!isMobile());\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const toggleDrawer = () => {\n    setOpen(!open)\n  }\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header open={ open } toggleDrawer={ toggleDrawer } />\n        <Navigation open={ open } handleDrawerClose={ handleDrawerClose } />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/countries\">\n              <CountriesPage />\n            </Route>\n            <Route path=\"/regions\">\n              <RegionsPage />\n            </Route>\n            <Route path=\"/cities\">\n              <CitiesPage />\n            </Route>\n            <Route path=\"/languages\">\n              <LanguagesPage />\n            </Route>\n            <Route path=\"/currencies\">\n              <CurrenciesPage />\n            </Route>\n          </Switch>\n        </Content>\n        {/*<Footer />*/}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    width: '100vw',\r\n    zIndex: 10,\r\n  },\r\n});\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\nexport default Footer","export const isMobile = () => {\r\n  let check = false;\r\n  (function(a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series([46])0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n        a,\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br([ev])w|bumb|bw-([nu])|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do([cp])o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly([-_])|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-([mpt])|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c([- _agpst])|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac([ \\-\\/])|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja([tv])a|jbro|jemu|jigs|kddi|keji|kgt([ \\/])|klon|kpt |kwc-|kyo([ck])|le(no|xi)|lg( g|\\/([klu])|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t([- ov])|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30([02])|n50([025])|n7(0([01])|10)|ne(([cm])-|on|tf|wf|wg|wt)|nok([6i])|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan([adt])|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c([-01])|47|mc|nd|ri)|sgh-|shar|sie([-m])|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel([im])|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c([- ])|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\r\n        a.substr(0, 4),\r\n      )\r\n    )\r\n      check = true;\r\n  })(navigator.userAgent || navigator.vendor || window.opera);\r\n  return check;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2283da78.svg\";"],"sourceRoot":""}